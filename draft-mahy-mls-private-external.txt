



Messaging Layer Security                                         R. Mahy
Internet-Draft                            Rohan Mahy Consulting Services
Intended status: Informational                            2 October 2025
Expires: 5 April 2026


 Private External Message extensions for Messaging Layer Security (MLS)
                 draft-mahy-mls-private-external-latest

Abstract

   MLS groups that use private handshakes lose member privacy when
   sending external proposals.  This document addresses this
   shortcoming, by encrypting external proposals using the public key of
   the root of the MLS ratchet key.  It also provides a mechanism to
   share this key and protect it from tampering by a malicious
   intermediary.

About This Document

   This note is to be removed before publishing as an RFC.

   The latest revision of this draft can be found at
   https://rohanmahy.github.io/mls-private-external/draft-mahy-mls-
   private-external.html.  Status information for this document may be
   found at https://datatracker.ietf.org/doc/draft-mahy-mls-private-
   external/.

   Discussion of this document takes place on the Messaging Layer
   Security Working Group mailing list (mailto:mls@ietf.org), which is
   archived at https://mailarchive.ietf.org/arch/browse/mls/.  Subscribe
   at https://www.ietf.org/mailman/listinfo/mls/.

   Source for this draft and an issue tracker can be found at
   https://github.com/rohanmahy/mls-private-external.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 5 April 2026.

Copyright Notice

   Copyright (c) 2025 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.  Code Components
   extracted from this document must include Revised BSD License text as
   described in Section 4.e of the Trust Legal Provisions and are
   provided without warranty as described in the Revised BSD License.

Table of Contents

   1.  Introduction
   2.  Conventions and Definitions
   3.  Mechanism
     3.1.  Additional information shared in every commit
     3.2.  Sending an external proposal or external commit to the
           group
     3.3.  Decryption and verification by members
   4.  Security Considerations
   5.  IANA Considerations
   6.  References
     6.1.  Normative References
     6.2.  Informative References
   Acknowledgments
   Author's Address

1.  Introduction

   The MLS protocol [RFC9420] was designed to support both a model where
   the Distribution Service (DS) sees the contents of MLS handshake
   messages and often assumes a policy enforcement role, and a model
   where the DS is merely responsible for forwarding handshake messages
   and possibly enforcing ordering of messages.  In the first model
   clients send every handshake as a PublicMessage (or a
   SemiPrivateMessage [I-D.mahy-mls-semiprivatemessage]), whereas in the
   second model the clients send in-group handshakes as a
   PrivateMessage.  As of this writing there are non-trivial commercial
   deployments using both the PublicMessage model (ex: Cisco, Amazon,
   Ring Central, Wire) and the PrivateMessage model (ex: Ephemera,
   Germ).

   In the PrivateMessage model, group members enjoy substantially more
   privacy from the DS.  In the PublicMessage model, the DS usually can
   provide (authorized) non-members with enough information that they
   can join a group via an external commit.  Even in the PublicMessage
   model, some (usually large) groups use external proposals to join.
   In the PrivateMessage model, (authorized) non-members can also join
   using external proposals (or rarely using external commits if the
   GroupInfo is shared by an existing member), however the joiner is
   currently forced to send the proposal (or commit) as a PublicMessage
   and therefore reveal potentially private information such as their
   credential and capabilities to the DS.

   This extension allows groups using PrivateMessage to maintain the
   privacy of external handshake messages, by encrypting them to the
   (public) encryption_key of the root node of the ratchet tree.  It
   also provides a way to convey that public key safely to prevent
   active attacks.

2.  Conventions and Definitions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in
   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

3.  Mechanism

3.1.  Additional information shared in every commit

   Groups participating in this mechanism include a
   root_private_signature_key component (see Section 4.6 of
   [I-D.ietf-mls-extensions]) in the GroupContext of type
   RootPrivateSignature, containing a unique random private signature
   key corresponding to the group's cipher suite.  Whenever a commit
   removes a member from a group, this component MUST be replaced with a
   new unique random private signature key.

   Members sending a commit include one additional Additional
   Authentication Data (AAD) component (see Section 4.9 of
   [I-D.ietf-mls-extensions]) of type ExternalEncryptionInfo in every
   commit (including commits sent in a PrivateExternalMessage).

      Note: SafeSignWithLabel is not used, because there are two
      different component IDs represented.

   struct {
       opaque root_private_signature_key<V>;
   } RootPrivateSignature;

   struct {
       ProtocolVersion version = mls10;
       opaque group_id<V>;
       uint64 epoch;
       CipherSuite ciphersuite;
       HPKEPublicKey root_public_hpke_key;
       SignaturePublicKey root_public_signature_key;
   } ExternalEncryptionInfoTBS;

   struct {
       CipherSuite ciphersuite;
       HPKEPublicKey root_public_hpke_key;
       SignaturePublicKey root_public_signature_key;
       /* SignWithLabel(root_private_signature_key, */
       /*    "ExternalEncryptionInfoTBS", ExternalEncryptionInfoTBS) */
       opaque external_encryption_signature<V>;
   } ExternalEncryptionInfo;

3.2.  Sending an external proposal or external commit to the group

   A non-member client that wishes to send a message to the group, first
   constructs a PublicMessage called external_message_plaintext.  The
   PrivateExternalMessage wire format wraps that
   external_message_plaintext, by encrypting it to the HPKE public key
   of the root of the ratchet tree (the root Node's
   ParentNode.encryption_key).  PrivateExternalMessage is defined below.

   /*  PublicMessage.content.sender.sender_type != member  */
   PublicMessage external_message_plaintext;

   encrypted_public_message = EncryptWithLabel(root_public_hpke_key,
       "PrivateExternalMessageContent", PrivateExternalMessageContext,
       external_message_plaintext)

   struct {
       /* PublicMessage (the plaintext) is pretty self contained */
   } PrivateExternalMessageContext;

   struct {
       opaque group_id<V>;
       uint64 epoch;
       ContentType content_type;
       opaque authenticated_data<V>;
       HPKECiphertext encrypted_public_message<V>;
   } PrivateExternalMessage;

   PrivateExternalMessage.authenticated_data =
      external_message_plaintext.content.authenticated_data

   struct {
       ProtocolVersion version = mls10;
       WireFormat wire_format;
       select (MLSMessage.wire_format) {
           case mls_public_message:
               PublicMessage public_message;
           case mls_private_message:
               PrivateMessage private_message;
           ...
           case mls_private_external_message;
               PrivateExternalMessage private_external_message
       };
   } MLSMessage;

3.3.  Decryption and verification by members

   Members receiving a PrivateExternalMessage check that the group_id
   matches a known group and that the epoch is the current epoch.  They
   then decrypt and verify the encrypted_public_message.

   /* root_private_hpke_key is node_priv[<max>] */
   external_message_plaintext = DecryptWithLabel(
       root_private_hpke_key,
       "PrivateExternalMessageContent", PrivateExternalMessageContext,
       encrypted_public_message.kem_output,
       encrypted_public_message.ciphertext)

   They then verify the following values in the PrivateExternalMessage
   match their corresponding field in the
   external_message_plaintext.content:

   *  group_id,

   *  epoch,

   *  content_type, and

   *  authenticated_data

   Finally, they process the external_message_plaintext as if it were a
   regular PublicMessage.

4.  Security Considerations

   TODO Security

5.  IANA Considerations

   TODO IANA

6.  References

6.1.  Normative References

   [I-D.ietf-mls-extensions]
              Robert, R., "The Messaging Layer Security (MLS)
              Extensions", Work in Progress, Internet-Draft, draft-ietf-
              mls-extensions-08, 21 July 2025,
              <https://datatracker.ietf.org/doc/html/draft-ietf-mls-
              extensions-08>.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/rfc/rfc2119>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/rfc/rfc8174>.

   [RFC9420]  Barnes, R., Beurdouche, B., Robert, R., Millican, J.,
              Omara, E., and K. Cohn-Gordon, "The Messaging Layer
              Security (MLS) Protocol", RFC 9420, DOI 10.17487/RFC9420,
              July 2023, <https://www.rfc-editor.org/rfc/rfc9420>.

6.2.  Informative References

   [I-D.mahy-mls-semiprivatemessage]
              Mahy, R., "Semi-Private Messages in the Messaging Layer
              Security (MLS) Protocol", Work in Progress, Internet-
              Draft, draft-mahy-mls-semiprivatemessage-05, 21 April
              2025, <https://datatracker.ietf.org/doc/html/draft-mahy-
              mls-semiprivatemessage-05>.

Acknowledgments

   TODO acknowledge.

Author's Address

   Rohan Mahy
   Rohan Mahy Consulting Services
   Email: rohan.ietf@gmail.com
